{"version":3,"sources":["App.module.css","components/ContactForm/ContactForm.js","components/ContactsList/ContactsList.js","components/Filter/Filter.js","App.js","reportWebVitals.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","INITIAL_STATE","name","number","ContactForm","state","handelChangeForm","target","value","setState","handelFormSubmit","e","preventDefault","onAdd","props","validateForm","id","uuid","resetForm","onCheckUnique","alert","this","onSubmit","className","s","form","input","type","placeholder","onChange","button","Component","ContactListItem","onRemove","onClick","ContactsList","contacts","length","map","contact","Filter","filter","App","handleAddContact","newContact","handleCheckUnique","isExistContact","find","handleRemoveContact","handelFilterChange","getVisibleContacts","toLowerCase","includes","componentDidMount","parseJsonContacts","JSON","parse","localStorage","getItem","componentDidUpdate","prevProps","prevState","setItem","stringify","visibleContacts","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9ad1b6f3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2-IRI\"};","import { Component } from \"react\";\r\nimport { v4 as uuid } from 'uuid';\r\nimport s from './ContactForm.module.css'\r\n\r\nconst INITIAL_STATE = {\r\n  name: \"\",\r\n  number: \"\",\r\n};\r\n\r\nexport default class ContactForm extends Component {\r\n  state = { INITIAL_STATE };\r\n\r\n  handelChangeForm = ({ target }) => {\r\n    const { name, value } = target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handelFormSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const { name, number } = this.state;\r\n    const { onAdd } = this.props;\r\n    const isValidatedForm = this.validateForm();\r\n\r\n    if (!isValidatedForm) return;\r\n\r\n    onAdd({ id: uuid(), name, number });\r\n\r\n    this.resetForm();\r\n   \r\n  };\r\n\r\n  validateForm = () => {\r\n    const { name, number } = this.state;\r\n    const { onCheckUnique } = this.props;\r\n    if (!name || !number) {\r\n      alert(\"Some field is empty\");\r\n      return false;\r\n    }\r\n    return onCheckUnique(name);\r\n  };\r\n\r\n  resetForm = () => this.setState(INITIAL_STATE);\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form onSubmit={this.handelFormSubmit} className={s.form}>\r\n        Name\r\n        <input className={s.input}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          placeholder=\"Enter name\"\r\n          value={name}\r\n          onChange={this.handelChangeForm}\r\n        />\r\n        Number\r\n        <input className={s.input}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          placeholder=\"Enter phone number\"\r\n          value={number}\r\n          onChange={this.handelChangeForm}\r\n        />\r\n        <button className={s.button} type=\"submit\">Add Contact</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","const ContactListItem = ({ id, name, number, onRemove }) => {\r\n  return (\r\n    <>\r\n      {name}: {number}\r\n      <button onClick={() => onRemove(id)}>Delete</button>\r\n    </>\r\n  );\r\n};\r\n\r\nconst ContactsList = ({ contacts, onRemove }) => {\r\n  if (contacts.length === 0) return null;\r\n  return (\r\n    <ul>\r\n      {contacts.map((contact) => (\r\n        <li key={contact.id}>\r\n          <ContactListItem {...contact} onRemove={onRemove} />\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ContactsList;\r\n","const Filter = ({ filter, onChange }) => {\r\n  return (\r\n    <input\r\n      type=\"text\"\r\n      name=\"filter\"\r\n      value={filter}\r\n      onChange={({ target }) => onChange(target.value)}\r\n      placeholder=\"Enter name for Search\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import { Component } from \"react\";\n\nimport s from './App.module.css';\n\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport ContactsList from \"./components/ContactsList/ContactsList\";\nimport Filter from \"./components/Filter/Filter\";\n\nexport default class App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  handleAddContact = (newContact) =>\n    this.setState (({ contacts }) => ({\n      contacts: [...contacts, newContact]\n    }));\n\n  handleCheckUnique = (name) => {\n    const { contacts } = this.state;\n\n    const isExistContact = !!contacts.find((contact) => contact.name === name);\n\n    isExistContact && alert(\"Contact is already exist\");\n\n    return !isExistContact;\n  };\n\n  handleRemoveContact = (id) =>\n    this.setState(({ contacts }) => ({\n      contacts: contacts.filter((contact) => contact.id !== id),\n    }));\n\n  handelFilterChange = (filter) => this.setState({ filter });\n\n  getVisibleContacts = () => {\n    const { contacts, filter } = this.state;\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  componentDidMount = () => {\n        const parseJsonContacts = JSON.parse(localStorage.getItem('CONTACTS'));\n\n        if(parseJsonContacts)\n        this.setState({contacts: parseJsonContacts})\n    }\n\n    componentDidUpdate = (prevProps, prevState) => {\n        const { contacts } = this.state;\n\n        if(contacts !== prevState.contacts){\n            localStorage.setItem('CONTACTS', JSON.stringify(contacts));\n        }\n    }\n\n  render() {\n    const { filter } = this.state;\n    const visibleContacts = this.getVisibleContacts();\n    return (\n      <div className = {s.App}>\n        <h1>Phone book</h1>\n        <ContactForm\n          onAdd={this.handleAddContact}\n          onCheckUnique={this.handleCheckUnique}\n        />\n        <h2>Contacts</h2>\n        <Filter\n          filter={filter}\n          onChange={this.handelFilterChange}\n        />\n        <ContactsList\n          contacts={visibleContacts}\n          onRemove={this.handleRemoveContact}\n        />\n      </div>\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__iLAJX\",\"input\":\"ContactForm_input__1L4TK\",\"button\":\"ContactForm_button__1nngS\"};"],"sourceRoot":""}